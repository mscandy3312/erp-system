// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int      @id @default(autoincrement())
  nombre    String
  email     String   @unique
  password  String
  rol       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Empleado {
  id        Int      @id @default(autoincrement())
  nombre    String
  apellido  String
  email     String   @unique
  telefono  String?
  cargo     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Proyecto {
  id          Int      @id @default(autoincrement())
  nombre      String
  descripcion String?
  estado      String
  fechaInicio DateTime
  fechaFin    DateTime?
  tareas      Tarea[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tarea {
  id          Int      @id @default(autoincrement())
  titulo      String
  descripcion String?
  estado      String
  prioridad   String
  fechaInicio DateTime
  fechaFin    DateTime?
  proyectoId  Int?
  proyecto    Proyecto? @relation(fields: [proyectoId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Activo {
  id          Int      @id @default(autoincrement())
  nombre      String
  descripcion String?
  tipo        String
  estado      String
  valor       Float
  fechaAdquisicion DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Mantenimiento {
  id          Int      @id @default(autoincrement())
  activoId    Int
  tipo        String
  descripcion String?
  fecha       DateTime
  costo       Float
  estado      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Servicio {
  id          Int      @id @default(autoincrement())
  nombre      String
  descripcion String?
  precio      Float
  estado      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Asistencia {
  id          Int      @id @default(autoincrement())
  empleadoId  Int
  fecha       DateTime
  tipo        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
